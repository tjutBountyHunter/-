<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.IbmCommercialMapper">
    <resultMap id="BaseResultMap" type="pojo.IbmCommercial">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="userId" property="userid" jdbcType="INTEGER"/>
        <result column="commercialCode" property="commercialcode" jdbcType="VARCHAR"/>
        <result column="efileCode" property="efilecode" jdbcType="VARCHAR"/>
        <result column="orderCode" property="ordercode" jdbcType="VARCHAR"/>
        <result column="money" property="money" jdbcType="VARCHAR"/>
        <result column="robotIp" property="robotip" jdbcType="VARCHAR"/>
        <result column="informant" property="informant" jdbcType="VARCHAR"/>
        <result column="createDate" property="createdate" jdbcType="DATE"/>
        <result column="updateDate" property="updatedate" jdbcType="DATE"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" suffix=")" prefixOverrides="and">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")"
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    id, userId, commercialCode, efileCode, orderCode, money, robotIp, informant, createDate, 
    updateDate
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="example.IbmCommercialExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from ibm_commercial
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from ibm_commercial
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ibm_commercial
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <delete id="deleteByExample" parameterType="example.IbmCommercialExample">
        delete from ibm_commercial
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="pojo.IbmCommercial">
    insert into ibm_commercial (id, userId, commercialCode, 
      efileCode, orderCode, money, 
      robotIp, informant, createDate, 
      updateDate)
    values (#{id,jdbcType=INTEGER}, #{userid,jdbcType=INTEGER}, #{commercialcode,jdbcType=VARCHAR}, 
      #{efilecode,jdbcType=VARCHAR}, #{ordercode,jdbcType=VARCHAR}, #{money,jdbcType=VARCHAR}, 
      #{robotip,jdbcType=VARCHAR}, #{informant,jdbcType=VARCHAR}, #{createdate,jdbcType=DATE}, 
      #{updatedate,jdbcType=DATE})
  </insert>
    <insert id="insertSelective" parameterType="pojo.IbmCommercial">
        insert into ibm_commercial
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userid != null">
                userId,
            </if>
            <if test="commercialcode != null">
                commercialCode,
            </if>
            <if test="efilecode != null">
                efileCode,
            </if>
            <if test="ordercode != null">
                orderCode,
            </if>
            <if test="money != null">
                money,
            </if>
            <if test="robotip != null">
                robotIp,
            </if>
            <if test="informant != null">
                informant,
            </if>
            <if test="createdate != null">
                createDate,
            </if>
            <if test="updatedate != null">
                updateDate,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="userid != null">
                #{userid,jdbcType=INTEGER},
            </if>
            <if test="commercialcode != null">
                #{commercialcode,jdbcType=VARCHAR},
            </if>
            <if test="efilecode != null">
                #{efilecode,jdbcType=VARCHAR},
            </if>
            <if test="ordercode != null">
                #{ordercode,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                #{money,jdbcType=VARCHAR},
            </if>
            <if test="robotip != null">
                #{robotip,jdbcType=VARCHAR},
            </if>
            <if test="informant != null">
                #{informant,jdbcType=VARCHAR},
            </if>
            <if test="createdate != null">
                #{createdate,jdbcType=DATE},
            </if>
            <if test="updatedate != null">
                #{updatedate,jdbcType=DATE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="example.IbmCommercialExample" resultType="java.lang.Integer">
        select count(*) from ibm_commercial
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update ibm_commercial
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.userid != null">
                userId = #{record.userid,jdbcType=INTEGER},
            </if>
            <if test="record.commercialcode != null">
                commercialCode = #{record.commercialcode,jdbcType=VARCHAR},
            </if>
            <if test="record.efilecode != null">
                efileCode = #{record.efilecode,jdbcType=VARCHAR},
            </if>
            <if test="record.ordercode != null">
                orderCode = #{record.ordercode,jdbcType=VARCHAR},
            </if>
            <if test="record.money != null">
                money = #{record.money,jdbcType=VARCHAR},
            </if>
            <if test="record.robotip != null">
                robotIp = #{record.robotip,jdbcType=VARCHAR},
            </if>
            <if test="record.informant != null">
                informant = #{record.informant,jdbcType=VARCHAR},
            </if>
            <if test="record.createdate != null">
                createDate = #{record.createdate,jdbcType=DATE},
            </if>
            <if test="record.updatedate != null">
                updateDate = #{record.updatedate,jdbcType=DATE},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update ibm_commercial
        set id = #{record.id,jdbcType=INTEGER},
        userId = #{record.userid,jdbcType=INTEGER},
        commercialCode = #{record.commercialcode,jdbcType=VARCHAR},
        efileCode = #{record.efilecode,jdbcType=VARCHAR},
        orderCode = #{record.ordercode,jdbcType=VARCHAR},
        money = #{record.money,jdbcType=VARCHAR},
        robotIp = #{record.robotip,jdbcType=VARCHAR},
        informant = #{record.informant,jdbcType=VARCHAR},
        createDate = #{record.createdate,jdbcType=DATE},
        updateDate = #{record.updatedate,jdbcType=DATE}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="pojo.IbmCommercial">
        update ibm_commercial
        <set>
            <if test="userid != null">
                userId = #{userid,jdbcType=INTEGER},
            </if>
            <if test="commercialcode != null">
                commercialCode = #{commercialcode,jdbcType=VARCHAR},
            </if>
            <if test="efilecode != null">
                efileCode = #{efilecode,jdbcType=VARCHAR},
            </if>
            <if test="ordercode != null">
                orderCode = #{ordercode,jdbcType=VARCHAR},
            </if>
            <if test="money != null">
                money = #{money,jdbcType=VARCHAR},
            </if>
            <if test="robotip != null">
                robotIp = #{robotip,jdbcType=VARCHAR},
            </if>
            <if test="informant != null">
                informant = #{informant,jdbcType=VARCHAR},
            </if>
            <if test="createdate != null">
                createDate = #{createdate,jdbcType=DATE},
            </if>
            <if test="updatedate != null">
                updateDate = #{updatedate,jdbcType=DATE},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="pojo.IbmCommercial">
    update ibm_commercial
    set userId = #{userid,jdbcType=INTEGER},
      commercialCode = #{commercialcode,jdbcType=VARCHAR},
      efileCode = #{efilecode,jdbcType=VARCHAR},
      orderCode = #{ordercode,jdbcType=VARCHAR},
      money = #{money,jdbcType=VARCHAR},
      robotIp = #{robotip,jdbcType=VARCHAR},
      informant = #{informant,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=DATE},
      updateDate = #{updatedate,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>

</mapper>